from functools import partial

import jax
import jax.numpy as jnp
import numpy as onp
from scipy import optimize
from tensorflow_probability.substrates import jax as tfp

@jax.jit
def f(x, a, b, c):

  b = (b - 1./(2*a))
  diff = x - b
  zs = jnp.stack([diff, -b*jnp.ones_like(x), 1 - b*jnp.ones_like(x)],axis=0)
  zs = zs * a
  y, y0, y1 = (zs**3) / (zs**3 + (1 - zs)**3)
  y = (y - y0)/ (y1 - y0)

  y = y*(1-c) + c *x
  
  return y

@jax.jit
def gradf(x,a,b,c):
  res = (c + (1 - c)*(3*a*(a*(-b + x) + 0.5)**2/((-a*(-b + x) + 0.5)**3 + (a*(-b + x) + 0.5)**3) + (a*(-b + x) + 0.5)**3*(3*a*(-a*(-b + x) + 0.5)**2 - 3*a*(a*(-b + x) + 0.5)**2)/((-a*(-b + x) + 0.5)**3 + (a*(-b + x) + 0.5)**3)**2)/(-(-a*b + 0.5)**3/((-a*b + 0.5)**3 + (a*b + 0.5)**3) + (a*(1 - b) + 0.5)**3/((-a*(1 - b) + 0.5)**3 + (a*(1 - b) + 0.5)**3)))
  return res

@jax.jit
def inv_f(y, a, b, c):
  """Analytic inverse of f computed with sympy"""
  return (-1/9*2**(1/3)*(-3*(0.25*a**6*b**6 + 0.5*a**6*b**5*y - 0.5*a**6*b**5 - 1.0*a**6*b**4*y + 0.25*a**6*b**4 + 0.5*a**6*b**3*y - 0.104166666666667*a**4*b**4 - 0.166666666666667*a**4*b**3*c - 0.25*a**4*b**3*y + 0.25*a**4*b**3 + 0.166666666666667*a**4*b**2*c + 0.25*a**4*b**2*y - 0.125*a**4*b**2 + 0.0416666666666667*a**4*b*y + 0.00520833333333333*a**2*b**2 + 0.0416666666666667*a**2*b*c + 0.03125*a**2*b*y - 0.03125*a**2*b - 0.0138888888888889*a**2*c + 0.015625*a**2 + 0.00130208333333333)/(0.25*a**6*b**4 - 0.5*a**6*b**3 + 0.25*a**6*b**2 - 0.166666666666667*a**4*b**2*c + 0.0416666666666667*a**4*b**2 + 0.166666666666667*a**4*b*c - 0.0416666666666667*a**4*b + 0.0208333333333333*a**4 + 0.0138888888888889*a**2*c + 0.00173611111111111*a**2) + 4.0*(-0.5*a**4*b**5 - 0.25*a**4*b**4*y + 1.0*a**4*b**4 + 0.5*a**4*b**3*y - 0.5*a**4*b**3 - 0.25*a**4*b**2*y + 0.166666666666667*a**2*b**3*c + 0.0833333333333333*a**2*b**3 + 0.125*a**2*b**2*y - 0.25*a**2*b**2 - 0.166666666666667*a**2*b*c - 0.125*a**2*b*y + 0.125*a**2*b - 0.0208333333333333*a**2*y - 0.0416666666666667*b*c + 0.0104166666666667*b - 0.015625*y)**2/(0.5*a**4*b**4 - a**4*b**3 + 0.5*a**4*b**2 - 0.333333333333333*a**2*b**2*c + 0.0833333333333333*a**2*b**2 + 0.333333333333333*a**2*b*c - 0.0833333333333333*a**2*b + 0.0416666666666667*a**2 + 0.0277777777777778*c + 0.00347222222222222)**2)/(jnp.sqrt(-0.35116598079561*(-0.75*(0.25*a**6*b**6 + 0.5*a**6*b**5*y - 0.5*a**6*b**5 - 1.0*a**6*b**4*y + 0.25*a**6*b**4 + 0.5*a**6*b**3*y - 0.104166666666667*a**4*b**4 - 0.166666666666667*a**4*b**3*c - 0.25*a**4*b**3*y + 0.25*a**4*b**3 + 0.166666666666667*a**4*b**2*c + 0.25*a**4*b**2*y - 0.125*a**4*b**2 + 0.0416666666666667*a**4*b*y + 0.00520833333333333*a**2*b**2 + 0.0416666666666667*a**2*b*c + 0.03125*a**2*b*y - 0.03125*a**2*b - 0.0138888888888889*a**2*c + 0.015625*a**2 + 0.00130208333333333)/(0.25*a**6*b**4 - 0.5*a**6*b**3 + 0.25*a**6*b**2 - 0.166666666666667*a**4*b**2*c + 0.0416666666666667*a**4*b**2 + 0.166666666666667*a**4*b*c - 0.0416666666666667*a**4*b + 0.0208333333333333*a**4 + 0.0138888888888889*a**2*c + 0.00173611111111111*a**2) + (-0.5*a**4*b**5 - 0.25*a**4*b**4*y + 1.0*a**4*b**4 + 0.5*a**4*b**3*y - 0.5*a**4*b**3 - 0.25*a**4*b**2*y + 0.166666666666667*a**2*b**3*c + 0.0833333333333333*a**2*b**3 + 0.125*a**2*b**2*y - 0.25*a**2*b**2 - 0.166666666666667*a**2*b*c - 0.125*a**2*b*y + 0.125*a**2*b - 0.0208333333333333*a**2*y - 0.0416666666666667*b*c + 0.0104166666666667*b - 0.015625*y)**2/(0.5*a**4*b**4 - a**4*b**3 + 0.5*a**4*b**2 - 0.333333333333333*a**2*b**2*c + 0.0833333333333333*a**2*b**2 + 0.333333333333333*a**2*b*c - 0.0833333333333333*a**2*b + 0.0416666666666667*a**2 + 0.0277777777777778*c + 0.00347222222222222)**2)**3 + ((-0.25*a**6*b**6*y + 0.5*a**6*b**5*y - 0.25*a**6*b**4*y + 0.104166666666667*a**4*b**4*y - 0.0833333333333333*a**4*b**3*y - 0.0416666666666667*a**4*b**2*y - 0.00520833333333333*a**2*b**2*y - 0.0104166666666667*a**2*b*y - 0.00173611111111111*a**2*y - 0.00130208333333333*y)/(0.25*a**6*b**4 - 0.5*a**6*b**3 + 0.25*a**6*b**2 - 0.166666666666667*a**4*b**2*c + 0.0416666666666667*a**4*b**2 + 0.166666666666667*a**4*b*c - 0.0416666666666667*a**4*b + 0.0208333333333333*a**4 + 0.0138888888888889*a**2*c + 0.00173611111111111*a**2) + 0.592592592592593*(-0.5*a**4*b**5 - 0.25*a**4*b**4*y + 1.0*a**4*b**4 + 0.5*a**4*b**3*y - 0.5*a**4*b**3 - 0.25*a**4*b**2*y + 0.166666666666667*a**2*b**3*c + 0.0833333333333333*a**2*b**3 + 0.125*a**2*b**2*y - 0.25*a**2*b**2 - 0.166666666666667*a**2*b*c - 0.125*a**2*b*y + 0.125*a**2*b - 0.0208333333333333*a**2*y - 0.0416666666666667*b*c + 0.0104166666666667*b - 0.015625*y)**3/(0.5*a**4*b**4 - a**4*b**3 + 0.5*a**4*b**2 - 0.333333333333333*a**2*b**2*c + 0.0833333333333333*a**2*b**2 + 0.333333333333333*a**2*b*c - 0.0833333333333333*a**2*b + 0.0416666666666667*a**2 + 0.0277777777777778*c + 0.00347222222222222)**3 - 1/3*(-0.5*a**4*b**5 - 0.25*a**4*b**4*y + 1.0*a**4*b**4 + 0.5*a**4*b**3*y - 0.5*a**4*b**3 - 0.25*a**4*b**2*y + 0.166666666666667*a**2*b**3*c + 0.0833333333333333*a**2*b**3 + 0.125*a**2*b**2*y - 0.25*a**2*b**2 - 0.166666666666667*a**2*b*c - 0.125*a**2*b*y + 0.125*a**2*b - 0.0208333333333333*a**2*y - 0.0416666666666667*b*c + 0.0104166666666667*b - 0.015625*y)*(0.25*a**6*b**6 + 0.5*a**6*b**5*y - 0.5*a**6*b**5 - 1.0*a**6*b**4*y + 0.25*a**6*b**4 + 0.5*a**6*b**3*y - 0.104166666666667*a**4*b**4 - 0.166666666666667*a**4*b**3*c - 0.25*a**4*b**3*y + 0.25*a**4*b**3 + 0.166666666666667*a**4*b**2*c + 0.25*a**4*b**2*y - 0.125*a**4*b**2 + 0.0416666666666667*a**4*b*y + 0.00520833333333333*a**2*b**2 + 0.0416666666666667*a**2*b*c + 0.03125*a**2*b*y - 0.03125*a**2*b - 0.0138888888888889*a**2*c + 0.015625*a**2 + 0.00130208333333333)/((0.25*a**4*b**4 - 0.5*a**4*b**3 + 0.25*a**4*b**2 - 0.166666666666667*a**2*b**2*c + 0.0416666666666667*a**2*b**2 + 0.166666666666667*a**2*b*c - 0.0416666666666667*a**2*b + 0.0208333333333333*a**2 + 0.0138888888888889*c + 0.00173611111111111)*(0.25*a**6*b**4 - 0.5*a**6*b**3 + 0.25*a**6*b**2 - 0.166666666666667*a**4*b**2*c + 0.0416666666666667*a**4*b**2 + 0.166666666666667*a**4*b*c - 0.0416666666666667*a**4*b + 0.0208333333333333*a**4 + 0.0138888888888889*a**2*c + 0.00173611111111111*a**2)))**2) + (-0.25*a**6*b**6*y + 0.5*a**6*b**5*y - 0.25*a**6*b**4*y + 0.104166666666667*a**4*b**4*y - 0.0833333333333333*a**4*b**3*y - 0.0416666666666667*a**4*b**2*y - 0.00520833333333333*a**2*b**2*y - 0.0104166666666667*a**2*b*y - 0.00173611111111111*a**2*y - 0.00130208333333333*y)/(0.25*a**6*b**4 - 0.5*a**6*b**3 + 0.25*a**6*b**2 - 0.166666666666667*a**4*b**2*c + 0.0416666666666667*a**4*b**2 + 0.166666666666667*a**4*b*c - 0.0416666666666667*a**4*b + 0.0208333333333333*a**4 + 0.0138888888888889*a**2*c + 0.00173611111111111*a**2) + 0.592592592592593*(-0.5*a**4*b**5 - 0.25*a**4*b**4*y + 1.0*a**4*b**4 + 0.5*a**4*b**3*y - 0.5*a**4*b**3 - 0.25*a**4*b**2*y + 0.166666666666667*a**2*b**3*c + 0.0833333333333333*a**2*b**3 + 0.125*a**2*b**2*y - 0.25*a**2*b**2 - 0.166666666666667*a**2*b*c - 0.125*a**2*b*y + 0.125*a**2*b - 0.0208333333333333*a**2*y - 0.0416666666666667*b*c + 0.0104166666666667*b - 0.015625*y)**3/(0.5*a**4*b**4 - a**4*b**3 + 0.5*a**4*b**2 - 0.333333333333333*a**2*b**2*c + 0.0833333333333333*a**2*b**2 + 0.333333333333333*a**2*b*c - 0.0833333333333333*a**2*b + 0.0416666666666667*a**2 + 0.0277777777777778*c + 0.00347222222222222)**3 - 1/3*(-0.5*a**4*b**5 - 0.25*a**4*b**4*y + 1.0*a**4*b**4 + 0.5*a**4*b**3*y - 0.5*a**4*b**3 - 0.25*a**4*b**2*y + 0.166666666666667*a**2*b**3*c + 0.0833333333333333*a**2*b**3 + 0.125*a**2*b**2*y - 0.25*a**2*b**2 - 0.166666666666667*a**2*b*c - 0.125*a**2*b*y + 0.125*a**2*b - 0.0208333333333333*a**2*y - 0.0416666666666667*b*c + 0.0104166666666667*b - 0.015625*y)*(0.25*a**6*b**6 + 0.5*a**6*b**5*y - 0.5*a**6*b**5 - 1.0*a**6*b**4*y + 0.25*a**6*b**4 + 0.5*a**6*b**3*y - 0.104166666666667*a**4*b**4 - 0.166666666666667*a**4*b**3*c - 0.25*a**4*b**3*y + 0.25*a**4*b**3 + 0.166666666666667*a**4*b**2*c + 0.25*a**4*b**2*y - 0.125*a**4*b**2 + 0.0416666666666667*a**4*b*y + 0.00520833333333333*a**2*b**2 + 0.0416666666666667*a**2*b*c + 0.03125*a**2*b*y - 0.03125*a**2*b - 0.0138888888888889*a**2*c + 0.015625*a**2 + 0.00130208333333333)/((0.25*a**4*b**4 - 0.5*a**4*b**3 + 0.25*a**4*b**2 - 0.166666666666667*a**2*b**2*c + 0.0416666666666667*a**2*b**2 + 0.166666666666667*a**2*b*c - 0.0416666666666667*a**2*b + 0.0208333333333333*a**2 + 0.0138888888888889*c + 0.00173611111111111)*(0.25*a**6*b**4 - 0.5*a**6*b**3 + 0.25*a**6*b**2 - 0.166666666666667*a**4*b**2*c + 0.0416666666666667*a**4*b**2 + 0.166666666666667*a**4*b*c - 0.0416666666666667*a**4*b + 0.0208333333333333*a**4 + 0.0138888888888889*a**2*c + 0.00173611111111111*a**2)))**(1/3) - 1/2*2**(2/3)*(jnp.sqrt(-0.35116598079561*(-0.75*(0.25*a**6*b**6 + 0.5*a**6*b**5*y - 0.5*a**6*b**5 - 1.0*a**6*b**4*y + 0.25*a**6*b**4 + 0.5*a**6*b**3*y - 0.104166666666667*a**4*b**4 - 0.166666666666667*a**4*b**3*c - 0.25*a**4*b**3*y + 0.25*a**4*b**3 + 0.166666666666667*a**4*b**2*c + 0.25*a**4*b**2*y - 0.125*a**4*b**2 + 0.0416666666666667*a**4*b*y + 0.00520833333333333*a**2*b**2 + 0.0416666666666667*a**2*b*c + 0.03125*a**2*b*y - 0.03125*a**2*b - 0.0138888888888889*a**2*c + 0.015625*a**2 + 0.00130208333333333)/(0.25*a**6*b**4 - 0.5*a**6*b**3 + 0.25*a**6*b**2 - 0.166666666666667*a**4*b**2*c + 0.0416666666666667*a**4*b**2 + 0.166666666666667*a**4*b*c - 0.0416666666666667*a**4*b + 0.0208333333333333*a**4 + 0.0138888888888889*a**2*c + 0.00173611111111111*a**2) + (-0.5*a**4*b**5 - 0.25*a**4*b**4*y + 1.0*a**4*b**4 + 0.5*a**4*b**3*y - 0.5*a**4*b**3 - 0.25*a**4*b**2*y + 0.166666666666667*a**2*b**3*c + 0.0833333333333333*a**2*b**3 + 0.125*a**2*b**2*y - 0.25*a**2*b**2 - 0.166666666666667*a**2*b*c - 0.125*a**2*b*y + 0.125*a**2*b - 0.0208333333333333*a**2*y - 0.0416666666666667*b*c + 0.0104166666666667*b - 0.015625*y)**2/(0.5*a**4*b**4 - a**4*b**3 + 0.5*a**4*b**2 - 0.333333333333333*a**2*b**2*c + 0.0833333333333333*a**2*b**2 + 0.333333333333333*a**2*b*c - 0.0833333333333333*a**2*b + 0.0416666666666667*a**2 + 0.0277777777777778*c + 0.00347222222222222)**2)**3 + ((-0.25*a**6*b**6*y + 0.5*a**6*b**5*y - 0.25*a**6*b**4*y + 0.104166666666667*a**4*b**4*y - 0.0833333333333333*a**4*b**3*y - 0.0416666666666667*a**4*b**2*y - 0.00520833333333333*a**2*b**2*y - 0.0104166666666667*a**2*b*y - 0.00173611111111111*a**2*y - 0.00130208333333333*y)/(0.25*a**6*b**4 - 0.5*a**6*b**3 + 0.25*a**6*b**2 - 0.166666666666667*a**4*b**2*c + 0.0416666666666667*a**4*b**2 + 0.166666666666667*a**4*b*c - 0.0416666666666667*a**4*b + 0.0208333333333333*a**4 + 0.0138888888888889*a**2*c + 0.00173611111111111*a**2) + 0.592592592592593*(-0.5*a**4*b**5 - 0.25*a**4*b**4*y + 1.0*a**4*b**4 + 0.5*a**4*b**3*y - 0.5*a**4*b**3 - 0.25*a**4*b**2*y + 0.166666666666667*a**2*b**3*c + 0.0833333333333333*a**2*b**3 + 0.125*a**2*b**2*y - 0.25*a**2*b**2 - 0.166666666666667*a**2*b*c - 0.125*a**2*b*y + 0.125*a**2*b - 0.0208333333333333*a**2*y - 0.0416666666666667*b*c + 0.0104166666666667*b - 0.015625*y)**3/(0.5*a**4*b**4 - a**4*b**3 + 0.5*a**4*b**2 - 0.333333333333333*a**2*b**2*c + 0.0833333333333333*a**2*b**2 + 0.333333333333333*a**2*b*c - 0.0833333333333333*a**2*b + 0.0416666666666667*a**2 + 0.0277777777777778*c + 0.00347222222222222)**3 - 1/3*(-0.5*a**4*b**5 - 0.25*a**4*b**4*y + 1.0*a**4*b**4 + 0.5*a**4*b**3*y - 0.5*a**4*b**3 - 0.25*a**4*b**2*y + 0.166666666666667*a**2*b**3*c + 0.0833333333333333*a**2*b**3 + 0.125*a**2*b**2*y - 0.25*a**2*b**2 - 0.166666666666667*a**2*b*c - 0.125*a**2*b*y + 0.125*a**2*b - 0.0208333333333333*a**2*y - 0.0416666666666667*b*c + 0.0104166666666667*b - 0.015625*y)*(0.25*a**6*b**6 + 0.5*a**6*b**5*y - 0.5*a**6*b**5 - 1.0*a**6*b**4*y + 0.25*a**6*b**4 + 0.5*a**6*b**3*y - 0.104166666666667*a**4*b**4 - 0.166666666666667*a**4*b**3*c - 0.25*a**4*b**3*y + 0.25*a**4*b**3 + 0.166666666666667*a**4*b**2*c + 0.25*a**4*b**2*y - 0.125*a**4*b**2 + 0.0416666666666667*a**4*b*y + 0.00520833333333333*a**2*b**2 + 0.0416666666666667*a**2*b*c + 0.03125*a**2*b*y - 0.03125*a**2*b - 0.0138888888888889*a**2*c + 0.015625*a**2 + 0.00130208333333333)/((0.25*a**4*b**4 - 0.5*a**4*b**3 + 0.25*a**4*b**2 - 0.166666666666667*a**2*b**2*c + 0.0416666666666667*a**2*b**2 + 0.166666666666667*a**2*b*c - 0.0416666666666667*a**2*b + 0.0208333333333333*a**2 + 0.0138888888888889*c + 0.00173611111111111)*(0.25*a**6*b**4 - 0.5*a**6*b**3 + 0.25*a**6*b**2 - 0.166666666666667*a**4*b**2*c + 0.0416666666666667*a**4*b**2 + 0.166666666666667*a**4*b*c - 0.0416666666666667*a**4*b + 0.0208333333333333*a**4 + 0.0138888888888889*a**2*c + 0.00173611111111111*a**2)))**2) + (-0.25*a**6*b**6*y + 0.5*a**6*b**5*y - 0.25*a**6*b**4*y + 0.104166666666667*a**4*b**4*y - 0.0833333333333333*a**4*b**3*y - 0.0416666666666667*a**4*b**2*y - 0.00520833333333333*a**2*b**2*y - 0.0104166666666667*a**2*b*y - 0.00173611111111111*a**2*y - 0.00130208333333333*y)/(0.25*a**6*b**4 - 0.5*a**6*b**3 + 0.25*a**6*b**2 - 0.166666666666667*a**4*b**2*c + 0.0416666666666667*a**4*b**2 + 0.166666666666667*a**4*b*c - 0.0416666666666667*a**4*b + 0.0208333333333333*a**4 + 0.0138888888888889*a**2*c + 0.00173611111111111*a**2) + 0.592592592592593*(-0.5*a**4*b**5 - 0.25*a**4*b**4*y + 1.0*a**4*b**4 + 0.5*a**4*b**3*y - 0.5*a**4*b**3 - 0.25*a**4*b**2*y + 0.166666666666667*a**2*b**3*c + 0.0833333333333333*a**2*b**3 + 0.125*a**2*b**2*y - 0.25*a**2*b**2 - 0.166666666666667*a**2*b*c - 0.125*a**2*b*y + 0.125*a**2*b - 0.0208333333333333*a**2*y - 0.0416666666666667*b*c + 0.0104166666666667*b - 0.015625*y)**3/(0.5*a**4*b**4 - a**4*b**3 + 0.5*a**4*b**2 - 0.333333333333333*a**2*b**2*c + 0.0833333333333333*a**2*b**2 + 0.333333333333333*a**2*b*c - 0.0833333333333333*a**2*b + 0.0416666666666667*a**2 + 0.0277777777777778*c + 0.00347222222222222)**3 - 1/3*(-0.5*a**4*b**5 - 0.25*a**4*b**4*y + 1.0*a**4*b**4 + 0.5*a**4*b**3*y - 0.5*a**4*b**3 - 0.25*a**4*b**2*y + 0.166666666666667*a**2*b**3*c + 0.0833333333333333*a**2*b**3 + 0.125*a**2*b**2*y - 0.25*a**2*b**2 - 0.166666666666667*a**2*b*c - 0.125*a**2*b*y + 0.125*a**2*b - 0.0208333333333333*a**2*y - 0.0416666666666667*b*c + 0.0104166666666667*b - 0.015625*y)*(0.25*a**6*b**6 + 0.5*a**6*b**5*y - 0.5*a**6*b**5 - 1.0*a**6*b**4*y + 0.25*a**6*b**4 + 0.5*a**6*b**3*y - 0.104166666666667*a**4*b**4 - 0.166666666666667*a**4*b**3*c - 0.25*a**4*b**3*y + 0.25*a**4*b**3 + 0.166666666666667*a**4*b**2*c + 0.25*a**4*b**2*y - 0.125*a**4*b**2 + 0.0416666666666667*a**4*b*y + 0.00520833333333333*a**2*b**2 + 0.0416666666666667*a**2*b*c + 0.03125*a**2*b*y - 0.03125*a**2*b - 0.0138888888888889*a**2*c + 0.015625*a**2 + 0.00130208333333333)/((0.25*a**4*b**4 - 0.5*a**4*b**3 + 0.25*a**4*b**2 - 0.166666666666667*a**2*b**2*c + 0.0416666666666667*a**2*b**2 + 0.166666666666667*a**2*b*c - 0.0416666666666667*a**2*b + 0.0208333333333333*a**2 + 0.0138888888888889*c + 0.00173611111111111)*(0.25*a**6*b**4 - 0.5*a**6*b**3 + 0.25*a**6*b**2 - 0.166666666666667*a**4*b**2*c + 0.0416666666666667*a**4*b**2 + 0.166666666666667*a**4*b*c - 0.0416666666666667*a**4*b + 0.0208333333333333*a**4 + 0.0138888888888889*a**2*c + 0.00173611111111111*a**2)))**(1/3) - 1/3*(-0.5*a**4*b**5 - 0.25*a**4*b**4*y + 1.0*a**4*b**4 + 0.5*a**4*b**3*y - 0.5*a**4*b**3 - 0.25*a**4*b**2*y + 0.166666666666667*a**2*b**3*c + 0.0833333333333333*a**2*b**3 + 0.125*a**2*b**2*y - 0.25*a**2*b**2 - 0.166666666666667*a**2*b*c - 0.125*a**2*b*y + 0.125*a**2*b - 0.0208333333333333*a**2*y - 0.0416666666666667*b*c + 0.0104166666666667*b - 0.015625*y)/(0.25*a**4*b**4 - 0.5*a**4*b**3 + 0.25*a**4*b**2 - 0.166666666666667*a**2*b**2*c + 0.0416666666666667*a**2*b**2 + 0.166666666666667*a**2*b*c - 0.0416666666666667*a**2*b + 0.0208333333333333*a**2 + 0.0138888888888889*c + 0.00173611111111111))



class SmoothCompactBumpFunction(tfp.bijectors.Bijector):

    def __init__(self, a, b, c,  name = 'SmoothCompactBumpFunction'):
      super(SmoothCompactBumpFunction, self).__init__(forward_min_event_ndims=0, name = name)
      self.a = a
      self.b = b
      self.c = c

    def _forward(self, x):
      return f(x, self.a, self.b, self.c)

    def _inverse(self, y):
      return inv_f(y,self.a, self.b, self.c)

    def _forward_log_det_jacobian(self, x):
      grad = gradf(x,self.a,self.b,self.c)
      grad = jnp.atleast_3d(grad)
      s, logdet = jnp.linalg.slogdet(grad)
      return jnp.reshape(s*logdet, x.shape)
